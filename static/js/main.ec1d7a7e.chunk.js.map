{"version":3,"sources":["js/components/_Header.js","js/components/_Filter.js","js/components/_Results.js","js/components/_Table.js","js/util/groupBy.js","App.js","js/util/download.js","index.js"],"names":["Header","props","getFile","event","file","console","log","reader","FileReader","Promise","resolve","reject","onload","target","result","onerror","error","readAsText","then","text","tableCallback","split","readFileContent","files","id","style","type","name","onInput","e","onClick","document","getElementById","click","Filter","biomes","data","map","d","biome","s","includes","push","BiomeComponents","key","value","LevelComponents","i","stars","arr","Array","className","level","checked","htmlFor","placeholder","onChange","searchCallback","biomeCallback","selected_levels","querySelectorAll","forEach","levelCallback","Results","filtered","filter","toLowerCase","search","handleClick","clicked_code","getAttribute","table","ResultsComponents","x","code","toString","data-code","detail","length","Table","table_data","this","table_data_grouped","reduce","rv","rolls","TableComponents","rows","section","dc","parts","arr_split","Number","left","right","delta","r","start_dc","close_dc","toFixed","Component","require","GoogleSpreadsheet","App","biomeFunction","childData","setState","levelFunction","searchFunction","tableFunction","state","undefined","ref","el","componentRef","some","trigger","content","row","join","encodedUri","encodeURI","link","createElement","setAttribute","body","appendChild","removeChild","download","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.ec1d7a7e.chunk.js","sourcesContent":["import React from 'react'\n\nexport default function Header(props) {\n\n\n  function getFile(event) {\n  \tconst input = event.target\n    readFileContent(input.files[0])\n  }\n\n  function readFileContent(file) {\n    console.log(file)\n  \tconst reader = new FileReader()\n    return new Promise((resolve, reject) => {\n      reader.onload = event => resolve(event.target.result)\n      reader.onerror = error => reject(error)\n      reader.readAsText(file)\n    }).then(text => props.tableCallback(text.split(',')) )\n  }\n\n  return(<header>\n      <h2>Broderickâ€™s Compendium: Plants and Fungi Across the Realm</h2>\n      <div id='g-menu'>\n        <input id='g-file' style={{'display':'none'}} type=\"file\" name=\"file\" onInput={e => getFile(e)}/>\n        <div onClick={() => document.getElementById('g-file').click()}>Load table</div>\n        <div>About</div>\n      </div>\n    </header>)\n\n}\n","import React from \"react\"\n\nexport default function Filter(props) {\n\n  const biomes = []\n  const levels = [\"Very Common\",  \"Common\", \"Uncommon\", \"Rare\", \"Very Rare\", \"Legendary\", \"Unknown\"]\n\n  props.data.map(d => {\n      d.biome.split(';').map(s => {\n        if (!biomes.includes(s)) {\n          biomes.push(s)\n        }\n      })\n\n    // if (!levels.includes(d.level)) {\n    //   levels.push(d.level)\n    // }\n  })\n  const BiomeComponents = biomes.map(d => <option key={d} value={d}>{d}</option>)\n  const LevelComponents = levels.map((d, i) => {\n    let arr = [...Array(i)]\n    let stars;\n    if (d !== \"Unknown\") {\n     stars = arr.map(d => <i className=\"fas fa-star\"></i>)\n    }\n\n    if (props.level.includes(d)) {\n      return <div key={d} className='levels-wrapper'><input className='levels' type='checkbox' name={d} checked/><label htmlFor={d}><span>{stars}</span> {d}</label></div>\n    } else {\n      return <div key={d} className='levels-wrapper'><input className='levels' type='checkbox' name={d}/><label htmlFor={d}><span>{stars}</span> {d}</label></div>\n    }\n  })\n\n\n\n  const handleBiomeChange = (e) => {\n    props.biomeCallback(e.target.value)\n  }\n\n\n  const handleLevelChange = (e) => {\n    const selected_levels = []\n    var checkedBoxes = document.querySelectorAll('input.levels:checked');\n    checkedBoxes.forEach(d => {\n      selected_levels.push(d.name)\n    })\n\n    props.levelCallback(selected_levels)\n  }\n\n  const handleSearch = (e) => {\n    props.searchCallback(e.target.value)\n  }\n\n\n  return(\n    <div id='g-filter'>\n      <input id='g-search' className='g-widget' type=\"text\" placeholder=\"Search..\" value={props.value} onChange={handleSearch}/>\n      <div id='g-biomes' className='g-widget'>\n        <div className='g-label'>Biome</div>\n        <select className='g-widget' onChange={handleBiomeChange}>\n          <option value='Any Biome'>Any Biome</option>\n          {BiomeComponents}\n        </select>\n      </div>\n      <div id='g-levels' className='g-widget'>\n        <div className='g-label'>Rarity</div>\n        <form onChange={handleLevelChange}>\n          {LevelComponents}\n        </form>\n      </div>\n    </div>\n    )\n}\n","import React from \"react\"\n\nexport default function Results(props) {\n\n\n  const filtered = props.data\n  .filter(d => d.name.toLowerCase().includes(props.search.toLowerCase()))\n  .filter(d => {\n    if (props.biome === \"Any Biome\") {\n      return d\n    } else {\n      return d.biome === props.biome\n    }\n  })\n  .filter(d => props.level.includes(d.level))\n\n  const handleClick = (e) => {\n    let clicked_code = e.target.getAttribute('data-code')\n    let table = props.table;\n\n    if (!table.includes(clicked_code)) {\n      table.push(clicked_code)\n    } else {\n      table = table.filter(d => d != clicked_code)\n    }\n    props.tableCallback(table)\n  }\n\n  const ResultsComponents = filtered.map(d => {\n    let x;\n    if (d.level === 'Very Common') {\n      x = 0\n    } else if (d.level === 'Common') {\n      x = 1\n    } else if (d.level === 'Uncommon') {\n      x = 2\n    } else if (d.level === 'Rare') {\n      x = 3\n    } else if (d.level === 'Very Rare') {\n      x = 4\n    } else if (d.level === 'Legendary') {\n      x = 5\n    }\n    let arr = [...Array(x)]\n    let stars;\n    if (d.level !== \"Unknown\") {\n     stars = arr.map(d => <i className=\"fas fa-star\"></i>)\n    }\n\n    return(\n      <div className='g-card'>\n        <div className=\"g-add\">\n          {props.table.includes(d.code.toString())\n          ? (<i onClick={handleClick} className=\"fas fa-minus-circle\" data-code={d.code}></i>)\n          : (<i onClick={handleClick} className=\"fas fa-plus-circle\" data-code={d.code}></i>)\n          }\n        </div>\n        <div className=\"g-inner\">\n          <div className='name'>{d.name}</div>\n          <div className='info'>\n            {d.biome.split(';').map(s => <div className='biome'>{s}</div>)}\n            <div className='level'><span>{stars}</span> {d.level}</div>\n          </div>\n          <div className='detail'>{d.detail}</div>\n        </div>\n      </div>\n        )\n  })\n\n  return(\n    <div id='g-results'>\n      {ResultsComponents.length\n      ? ResultsComponents\n      : (<div>Whoops.</div>)}\n    </div>\n    )\n}\n","import React, {Component} from \"react\"\nimport groupBy from '../util/groupBy'\n\nexport default class Table extends Component {\n  constructor() {\n    super();\n  }\n\nrender() {\n  const table_data = this.props.data.filter(d => this.props.table.includes(d.code.toString()))\n\n  const table_data_grouped = groupBy(table_data, 'level')\n\n  const very_common = table_data_grouped['Very Common']\n  const common = table_data_grouped['Common']\n  const uncommon = table_data_grouped['Uncommon']\n  const rare = table_data_grouped['Rare']\n  const very_rare = table_data_grouped['Very Rare']\n  const legnedary = table_data_grouped['Legendary']\n  const unknown = table_data_grouped['Unknown']\n\n  const array = [very_common,common,uncommon,rare,very_rare,legnedary,unknown]\n\n  const levels = [\"Very Common\",  \"Common\", \"Uncommon\", \"Rare\", \"Very Rare\", \"Legendary\", \"Unknown\"];\n  const rolls = ['1 - 29', '30 - 56', '57 - 79', '80 - 91', '92 - 99', '100', '']\n\n\n  const handleClick = (e) => {\n    let clicked_code = e.target.getAttribute('data-code')\n    let table = this.props.table;\n\n    // if (!table.includes(clicked_code)) {\n    //   table.push(clicked_code)\n    // } else {\n      table = table.filter(d => d != clicked_code)\n    // }\n    this.props.tableCallback(table)\n  }\n\n  const TableComponents = levels.map((d,i) => {\n    let section = table_data_grouped[d]\n    let rows;\n    if (section) {\n\n\n      function split(arr, parts) {\n          let arr_split = arr.split(' - ').map(d => Number(d))\n          let left = arr_split[0];\n          let right = arr_split[1]\n          var result = [],\n              delta = (right - left) / (parts - 1);\n          while (left < right) {\n              result.push(left);\n              left += delta;\n          }\n          result.push(right);\n          return result;\n      }\n\n\n      const dc = split(rolls[i], section.length + 1);\n      rows = section.map((r,i) => {\n        let start_dc;\n        let close_dc;\n\n        if (r.level == 'Legendary') {\n          start_dc = '100'\n        } else if (r.level != 'Unknown') {\n          start_dc = dc[i].toFixed(0)\n          if (i < section.length) {\n            close_dc = dc[i + 1].toFixed(0)\n          }\n\n          if (i > 0) {\n            start_dc = Number(start_dc) + 1\n          }\n        }\n          return (\n            <div className=\"g-table-row\">\n              <div className='dc'>\n              {start_dc\n                ? (<>{start_dc}</>)\n                : ('')\n              }\n              {close_dc\n                ? (<> - {close_dc}</>)\n                : ('')\n              }\n              </div>\n              <div className='name'>{r.name}</div>\n              <div className='info'>{r.biome.split(';').map((s, i) => <div className='biome'>{ ((i + 1 == r.biome.split(';').length) || (r.biome.split(';').length == 1)) ? (<>{s}</>) : (<>{s},&nbsp;</>)}</div>)}</div>\n              <i onClick={handleClick} className=\"row-remove fas fa-minus-circle\" data-code={r.code}></i>\n            </div>\n          )\n      })\n      return(\n        <div className='g-table-section'>\n        <div className='g-table-section-label'>{d} {rolls[i] ? <span>(DC {rolls[i]})</span> : ('')}</div>\n        <div className='g-table-section-header'>\n          <div className='dc'>d100</div>\n          <div className='name'>Plant Name</div>\n          <div className='info'>Biome</div>\n          <div></div>\n        </div>\n        {rows}\n        </div>\n      )\n    }\n  })\n  return(\n    <div id='g-table'>\n      {TableComponents}\n    </div>\n    )\n}\n\n\n}\n","export default function groupBy(xs, key) {\n  return xs.reduce(function(rv, x) {\n    (rv[x[key]] = rv[x[key]] || []).push(x);\n    return rv;\n  }, {});\n};\n","import React, {Component} from 'react';\nimport ReactToPrint from 'react-to-print';\nimport './scss/App.scss';\nimport Header from \"./js/components/_Header\"\nimport Filter from \"./js/components/_Filter\"\nimport Results from \"./js/components/_Results\"\nimport Table from \"./js/components/_Table\"\nimport download from './js/util/download'\n\nconst {\n  GoogleSpreadsheet\n} = require('google-spreadsheet');\n\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      data: undefined,\n      search: '',\n      biome: 'Any Biome',\n      level: [\"Very Common\",  \"Common\", \"Uncommon\", \"Rare\", \"Very Rare\", \"Legendary\", \"Unknown\"],\n      table: []\n    };\n  }\n\n  async componentDidMount() {\n    // const arr = [];\n    //\n    // const doc = new GoogleSpreadsheet('1iIVcK-e-0vKtbrfmlR9ViJhc7sxifqmYhcEHcG5RcWI');\n    // await doc.useServiceAccountAuth(require('./.config.json'));\n    // await doc.loadInfo(); // loads document properties and worksheets\n    // const sheet = doc.sheetsById[0];\n    // const rows = await sheet.getRows();\n    //\n    // rows.map((d) => arr.push({\n    //   name: d.name,\n    //   biome: d.biome,\n    //   detail: d.detail,\n    //   level: d.level,\n    //   code: d.gid\n    // }))\n\n    const arr = require('./assets/data.json')\n\n    this.setState({ data: arr });\n  }\n\n  biomeFunction = (childData) => {\n    this.setState({biome: childData})\n  }\n\n  levelFunction = (childData) => {\n    this.setState({level: childData})\n  }\n\n  searchFunction = (childData) => {\n    this.setState({search: childData})\n  }\n\n  tableFunction = (childData) => {\n    console.log(childData)\n    this.setState({table: childData})\n  }\n\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Header tableCallback = {this.tableFunction}/>\n        {this.state.data\n        ? (\n          <main id='main'>\n            <Filter data={this.state.data} biome={this.state.biome} level={this.state.level} biomeCallback = {this.biomeFunction} levelCallback = {this.levelFunction} searchCallback = {this.searchFunction}/>\n            <Results search={this.state.search} data={this.state.data} biome={this.state.biome} level={this.state.level} tableCallback = {this.tableFunction} table={this.state.table}/>\n            <div id='g-table-wrapper'>\n            <Table data={this.state.data} table={this.state.table} tableCallback = {this.tableFunction} ref={el => (this.componentRef = el)}/>\n            {this.state.table.some(d => d !== undefined)\n              ? (\n                <div id='g-buttons'>\n                <ReactToPrint\n                  trigger={() => <button>Print d100 table</button>}\n                  content={() => this.componentRef}\n                />\n                  <button onClick={() => download(this.state.table) }>Download data file</button>\n                </div>\n              )\n              : ('')\n            }\n            </div>\n          </main>\n        )\n        : (\n          <></>\n        )\n        }\n      </div>\n    )\n  }\n}\n\nexport default App;\n","export default function download(row) {\nconsole.log(row)\n  let content = \"data:text/plain;charset=utf-8,\"\n      + [row].map(e => e.join(\",\")).join(\"\\n\");\n\n  var encodedUri = encodeURI(content);\n\n  var link = document.createElement(\"a\");\n  link.setAttribute(\"href\", encodedUri);\n  link.setAttribute(\"download\", \"plant_d100_table.txt\");\n  document.body.appendChild(link); // Required for FF\n  link.click(); // This will download the data file named \"my_data.csv\".\n  document.body.removeChild(link);\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}